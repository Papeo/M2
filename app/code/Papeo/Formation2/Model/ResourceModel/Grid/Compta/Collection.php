<?php


namespace Papeo\Formation2\Model\ResourceModel\Grid\Commandes;


use Magento\Framework\Data\Collection\Db\FetchStrategyInterface as FetchStrategy;
use Magento\Framework\Data\Collection\EntityFactoryInterface as EntityFactory;
use Magento\Framework\Event\ManagerInterface as EventManager;
use Magento\Framework\View\Element\UiComponent\DataProvider\SearchResult;
use Psr\Log\LoggerInterface as Logger;

class Collection extends SearchResult
{
    public function __construct(EntityFactory $entityFactory, Logger $logger, FetchStrategy $fetchStrategy, EventManager $eventManager, $mainTable, $resourceModel = null, $identifierName = null, $connectionName = null)
    {
        parent::__construct($entityFactory, $logger, $fetchStrategy, $eventManager, "sales_order", \Magento\Sales\Model\ResourceModel\Order::class, $identifierName, $connectionName);
    }

    public function _initSelect()
    {
        parent::_initSelect(); // TODO: Change the autogenerated stub
       $this->getSelect()->joinLeft(['secondTable' => $this->getTable('sales_order_address')], 'main_table.shipping_address_id = secondTable.entity_id', ['country_id']);
       $this->getSelect()->joinLeft(['thirdTable' => $this->getTable('sales_order_payment')], 'main_table.entity_id = thirdTable.parent_id', ['payment_method' => "method"]);
      // $this->getSelect()->joinLeft(['fourthTable'=> $this->getTable('customer_grid_flat')],'main_table.entity_id= fourthTable.parent_id');


      //  var_dump($this->getSelect()->__toString());exit;
    }


}
